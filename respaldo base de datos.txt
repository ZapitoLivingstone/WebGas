-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.carts (
  user_id uuid NOT NULL,
  product_id integer NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT carts_pkey PRIMARY KEY (user_id, product_id),
  CONSTRAINT carts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.usuarios(id),
  CONSTRAINT carts_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.productos(id)
);
CREATE TABLE public.categorias (
  nombre text NOT NULL UNIQUE,
  id integer NOT NULL DEFAULT nextval('categorias_id_seq'::regclass),
  descripcion text,
  icono text,
  CONSTRAINT categorias_pkey PRIMARY KEY (id)
);
CREATE TABLE public.detalle_pedido (
  pedido_id integer,
  producto_id integer,
  cantidad integer NOT NULL,
  precio_unitario numeric NOT NULL,
  tipo_producto text CHECK (tipo_producto = ANY (ARRAY['propio'::text, 'dropshipping'::text])),
  id integer NOT NULL DEFAULT nextval('detalle_pedido_id_seq'::regclass),
  CONSTRAINT detalle_pedido_pkey PRIMARY KEY (id),
  CONSTRAINT detalle_pedido_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id),
  CONSTRAINT detalle_pedido_pedido_id_fkey FOREIGN KEY (pedido_id) REFERENCES public.pedidos(id)
);
CREATE TABLE public.detalle_ventas_pos (
  venta_id integer,
  producto_id integer,
  cantidad integer NOT NULL,
  precio_unitario numeric NOT NULL,
  descuento_tipo text CHECK (descuento_tipo = ANY (ARRAY['porcentaje'::text, 'monto'::text])),
  subtotal numeric NOT NULL,
  id integer NOT NULL DEFAULT nextval('detalle_ventas_pos_id_seq'::regclass),
  descuento_valor numeric DEFAULT 0,
  CONSTRAINT detalle_ventas_pos_pkey PRIMARY KEY (id),
  CONSTRAINT detalle_ventas_pos_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id),
  CONSTRAINT detalle_ventas_pos_venta_id_fkey FOREIGN KEY (venta_id) REFERENCES public.ventas_pos(id)
);
CREATE TABLE public.notificaciones_distribuidor (
  pedido_id integer,
  producto_id integer,
  distribuidor_id uuid,
  id integer NOT NULL DEFAULT nextval('notificaciones_distribuidor_id_seq'::regclass),
  estado text DEFAULT 'pendiente'::text,
  fecha_envio timestamp with time zone DEFAULT now(),
  CONSTRAINT notificaciones_distribuidor_pkey PRIMARY KEY (id),
  CONSTRAINT notificaciones_distribuidor_pedido_id_fkey FOREIGN KEY (pedido_id) REFERENCES public.pedidos(id),
  CONSTRAINT notificaciones_distribuidor_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id),
  CONSTRAINT notificaciones_distribuidor_distribuidor_id_fkey FOREIGN KEY (distribuidor_id) REFERENCES public.usuarios(id)
);
CREATE TABLE public.pedidos (
  usuario_id uuid,
  tipo_pago text NOT NULL,
  envio_direccion text,
  total numeric,
  id integer NOT NULL DEFAULT nextval('pedidos_id_seq'::regclass),
  fecha timestamp with time zone DEFAULT now(),
  estado text DEFAULT 'pendiente'::text,
  CONSTRAINT pedidos_pkey PRIMARY KEY (id),
  CONSTRAINT pedidos_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.usuarios(id)
);
CREATE TABLE public.productos (
  nombre text NOT NULL,
  descripcion text,
  precio numeric NOT NULL,
  stock integer,
  imagen_url text,
  tipo text NOT NULL CHECK (tipo = ANY (ARRAY['propio'::text, 'dropshipping'::text])),
  creado_por uuid,
  categoria_id integer,
  id integer NOT NULL DEFAULT nextval('productos_id_seq'::regclass),
  activo boolean DEFAULT true,
  CONSTRAINT productos_pkey PRIMARY KEY (id),
  CONSTRAINT productos_creado_por_fkey FOREIGN KEY (creado_por) REFERENCES public.usuarios(id),
  CONSTRAINT productos_categoria_id_fkey FOREIGN KEY (categoria_id) REFERENCES public.categorias(id)
);
CREATE TABLE public.usuarios (
  direccion text,
  telefono text,
  nombre text NOT NULL,
  email text NOT NULL UNIQUE,
  rol text NOT NULL CHECK (rol = ANY (ARRAY['cliente'::text, 'admin'::text, 'distribuidor'::text])),
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  creado_en timestamp with time zone DEFAULT now(),
  CONSTRAINT usuarios_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ventas_pos (
  admin_id uuid,
  metodo_pago text NOT NULL CHECK (metodo_pago = ANY (ARRAY['efectivo'::text, 'tarjeta_debito'::text, 'tarjeta_credito'::text, 'transferencia'::text])),
  total_bruto numeric NOT NULL,
  total_final numeric NOT NULL,
  id integer NOT NULL DEFAULT nextval('ventas_pos_id_seq'::regclass),
  fecha timestamp with time zone DEFAULT now(),
  descuento_total numeric DEFAULT 0,
  CONSTRAINT ventas_pos_pkey PRIMARY KEY (id),
  CONSTRAINT ventas_pos_admin_id_fkey FOREIGN KEY (admin_id) REFERENCES public.usuarios(id)
);
CREATE TABLE public.wishlist (
  user_id uuid NOT NULL,
  product_id integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT wishlist_pkey PRIMARY KEY (user_id, product_id),
  CONSTRAINT wishlist_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.usuarios(id),
  CONSTRAINT wishlist_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.productos(id)
);